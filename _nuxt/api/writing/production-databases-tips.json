{
  "id": "production-databases-tips",
  "slug": "production-databases-tips",
  "highlightedLanguages": [],
  "source": "---\ndate: 2018-08-05\nsummary: The goal here is get what you need done as quickly as possible and keep rolling. \"Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.\" - Mark Zuckerberg. 1. Connect to your production databases using the same tool you use for development. There's no need to...\ntags:\n  - database\n  - database-adminstration\n  - dba\n  - production\n  - productivity\n  - development\n  - mysql\n  - mssql\n  - postgres\n  - rockstar\n  - satire\n---\n\n## 10 pro tips: how to work with production databases\n\nThe goal here is get what *you* need done as quickly as possible and keep rolling.\n\n::: quote Mark Zuckerberg\nMove fast and break things. Unless you are breaking stuff, you are not moving fast enough.\n:::\n\n1. Use the same tool you use for development to connect to your production databases. There's no need to learn more than one tool for the same job. Context-switching is for chumps. \n1. Connect to all of the databases and keep the connections open all the time. It should be really easy to jump between databases, and from development to production.\n1. Query using a user which has full privileges. Come on, we're grown-ups here.\n1. Run queries in bulk where possible.\n1. Don't group databases in folders. Aim to reduce clicks rather than introduce them. On a related note, if you use keyboard shortcuts you don't need to worry about UI or to look at what you're doing at all really.\n1. Don't waste time with labelling or colouring your connections. Customers don't care how pretty your setup is. Strive for absolute consistency.\n1. If your tool has a \"safe mode\", forget about it. It will only hold you back. Productivity beats safety every time.\n1. Always browse primaries, unless you have a legitimate reason to use a replica. You might run an update on the wrong database and impact fewer databases than expected. \n1. Snapshots / backups are for the weak.\n1. Only use `WHERE` clauses when necessary. Database browsers tend to limit how many rows are returned anyway. Adding a `WHERE` clause yourself might unnecessarily slow down your query.\n\nBam! Rockstar database administration isn't a skill, it's a mindset.\n",
  "unfilteredRenderedBody": "<h2><a id=\"10-pro-tips-how-to-work-with-production-databases\" class=\"post-header-anchor\" href=\"#10-pro-tips-how-to-work-with-production-databases\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>10 pro tips: how to work with production databases</h2>\n<p>The goal here is get what <em>you</em> need done as quickly as possible and keep rolling.</p>\n<blockquote><p>Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.</p>\n<footer>&mdash;<cite><p>Mark Zuckerberg</p>\n</cite></footer></blockquote><ol>\n<li>Use the same tool you use for development to connect to your production databases. There's no need to learn more than one tool for the same job. Context-switching is for chumps.</li>\n<li>Connect to all of the databases and keep the connections open all the time. It should be really easy to jump between databases, and from development to production.</li>\n<li>Query using a user which has full privileges. Come on, we're grown-ups here.</li>\n<li>Run queries in bulk where possible.</li>\n<li>Don't group databases in folders. Aim to reduce clicks rather than introduce them. On a related note, if you use keyboard shortcuts you don't need to worry about UI or to look at what you're doing at all really.</li>\n<li>Don't waste time with labelling or colouring your connections. Customers don't care how pretty your setup is. Strive for absolute consistency.</li>\n<li>If your tool has a &quot;safe mode&quot;, forget about it. It will only hold you back. Productivity beats safety every time.</li>\n<li>Always browse primaries, unless you have a legitimate reason to use a replica. You might run an update on the wrong database and impact fewer databases than expected.</li>\n<li>Snapshots / backups are for the weak.</li>\n<li>Only use <code>WHERE</code> clauses when necessary. Database browsers tend to limit how many rows are returned anyway. Adding a <code>WHERE</code> clause yourself might unnecessarily slow down your query.</li>\n</ol>\n<p>Bam! Rockstar database administration isn't a skill, it's a mindset.</p>\n",
  "attributes": {
    "date": "2018-08-05T00:00:00.000Z",
    "summary": "The goal here is get what you need done as quickly as possible and keep rolling. \"Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.\" - Mark Zuckerberg. 1. Connect to your production databases using the same tool you use for development. There's no need to...",
    "tags": [
      {
        "id": "database",
        "name": "database"
      },
      {
        "id": "database-adminstration",
        "name": "database-adminstration"
      },
      {
        "id": "dba",
        "name": "dba"
      },
      {
        "id": "production",
        "name": "production"
      },
      {
        "id": "productivity",
        "name": "productivity"
      },
      {
        "id": "development",
        "name": "development"
      },
      {
        "id": "mysql",
        "name": "mysql"
      },
      {
        "id": "mssql",
        "name": "mssql"
      },
      {
        "id": "postgres",
        "name": "postgres"
      },
      {
        "id": "rockstar",
        "name": "rockstar"
      },
      {
        "id": "satire",
        "name": "satire"
      }
    ],
    "title": "10 pro tips: how to work with production databases",
    "updated_at": "2019-05-12T08:34:11.860Z"
  },
  "title": "10 pro tips: how to work with production databases",
  "renderedSummary": "<p>The goal here is get what you need done as quickly as possible and keep rolling. &quot;Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.&quot; - Mark Zuckerberg. 1. Connect to your production databases using the same tool you use for development. There's no need to...</p>\n",
  "rendered": "<h2><a id=\"10-pro-tips-how-to-work-with-production-databases\" class=\"post-header-anchor\" href=\"#10-pro-tips-how-to-work-with-production-databases\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>10 pro tips: how to work with production databases</h2>\n<p>The goal here is get what <em>you</em> need done as quickly as possible and keep rolling.</p>\n<blockquote><p>Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.</p>\n<footer>&mdash;<cite><p>Mark Zuckerberg</p>\n</cite></footer></blockquote><ol>\n<li>Use the same tool you use for development to connect to your production databases. There's no need to learn more than one tool for the same job. Context-switching is for chumps.</li>\n<li>Connect to all of the databases and keep the connections open all the time. It should be really easy to jump between databases, and from development to production.</li>\n<li>Query using a user which has full privileges. Come on, we're grown-ups here.</li>\n<li>Run queries in bulk where possible.</li>\n<li>Don't group databases in folders. Aim to reduce clicks rather than introduce them. On a related note, if you use keyboard shortcuts you don't need to worry about UI or to look at what you're doing at all really.</li>\n<li>Don't waste time with labelling or colouring your connections. Customers don't care how pretty your setup is. Strive for absolute consistency.</li>\n<li>If your tool has a &quot;safe mode&quot;, forget about it. It will only hold you back. Productivity beats safety every time.</li>\n<li>Always browse primaries, unless you have a legitimate reason to use a replica. You might run an update on the wrong database and impact fewer databases than expected.</li>\n<li>Snapshots / backups are for the weak.</li>\n<li>Only use <code>WHERE</code> clauses when necessary. Database browsers tend to limit how many rows are returned anyway. Adding a <code>WHERE</code> clause yourself might unnecessarily slow down your query.</li>\n</ol>\n<p>Bam! Rockstar database administration isn't a skill, it's a mindset.</p>\n",
  "summary": "The goal here is get what you need done as quickly as possible and keep rolling. &quot;Move fast and break things. Unless you are breaking stuff, you are not moving fast enough.&quot; - Mark Zuckerberg. 1. Connect to your production databases using the same tool you use for development. There's no need to...\n",
  "keywords": [
    "database",
    "database-adminstration",
    "dba",
    "production",
    "productivity",
    "development",
    "mysql",
    "mssql",
    "postgres",
    "rockstar",
    "satire"
  ],
  "published_at": "2018-08-05T00:00:00.000Z",
  "updated_at": "2019-05-12T08:34:11.860Z",
  "year": 2018,
  "month": 8,
  "day": 6,
  "next": {
    "id": "using-cygwins-bash-terminal-in-a-jetbrains-ide",
    "slug": "using-cygwins-bash-terminal-in-a-jetbrains-ide",
    "collection": null,
    "keywords": [
      "jetbrains",
      "cygwin",
      "ide",
      "terminal",
      "babun"
    ],
    "original": {
      "blogLink": "https://engineroom.teamwork.com",
      "blogName": "Teamwork's Engine Room",
      "url": "https://engineroom.teamwork.com/using-cygwins-bash-terminal-in-a-jetbrains-ide-d22dd71b52b4"
    },
    "title": "Using Cygwin’s bash terminal in a JetBrains IDE",
    "summary": "JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…\n",
    "photo": "/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif",
    "published_at": "2015-07-28T00:00:00.000Z",
    "renderedSummary": "<p>JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…</p>\n"
  },
  "prev": {
    "id": "beyond-the-browser-from-web-apps-to-desktop-apps",
    "slug": "beyond-the-browser-from-web-apps-to-desktop-apps",
    "collection": null,
    "keywords": [
      "node-webkit",
      "electron",
      "desktop",
      "javascript"
    ],
    "original": {
      "blogLink": "https://www.smashingmagazine.com/",
      "blogName": "Smashing Magazine",
      "url": "https://www.smashingmagazine.com/2017/03/beyond-browser-web-desktop-apps/"
    },
    "title": "Beyond The Browser: From Web Apps To Desktop Apps",
    "summary": "I started out as a web developer, and that’s now one part of what I do as a full-stack developer, but never had I imagined I’d create things for the desktop. I love the web. I love how altruistic our community is, how it embraces open-source, testing and pushing the envelope. I love discovering beautiful websites and powerful apps. When I was first tasked with creating a desktop app, I was apprehensive and intimidated. It seemed like it would be difficult, or at least… different.\n",
    "photo": "/images/blog-content/beyond-the-browser/chromiumDiagram.png",
    "published_at": "2017-03-21T00:00:00.000Z",
    "renderedSummary": "<p>I started out as a web developer, and that’s now one part of what I do as a full-stack developer, but never had I imagined I’d create things for the desktop. I love the web. I love how altruistic our community is, how it embraces open-source, testing and pushing the envelope. I love discovering beautiful websites and powerful apps. When I was first tasked with creating a desktop app, I was apprehensive and intimidated. It seemed like it would be difficult, or at least… different.</p>\n"
  }
}