{
  "id": "using-cygwins-bash-terminal-in-a-jetbrains-ide",
  "slug": "using-cygwins-bash-terminal-in-a-jetbrains-ide",
  "highlightedLanguages": [],
  "source": "---\ndate: 2015-07-28\nsummary: JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…\noriginal:\n  blogLink: https://engineroom.teamwork.com\n  blogName: Teamwork's Engine Room\n  url: https://engineroom.teamwork.com/using-cygwins-bash-terminal-in-a-jetbrains-ide-d22dd71b52b4\ntags:\n  - jetbrains\n  - cygwin\n  - ide\n  - terminal\n  - babun\n---\n\n## Using Cygwin’s bash terminal in a JetBrains IDE\n\n[JetBrains](https://www.jetbrains.com) IDEs are the best. [IntelliJ](https://www.jetbrains.com/idea/), [Android Studio](https://developer.android.com/sdk/index.html), [PHPStorm](https://www.jetbrains.com/phpstorm/), [PyCharm](https://www.jetbrains.com/pycharm/), and so on. I use [IntelliJ Ultimate](https://www.jetbrains.com/idea/features/editions_comparison_matrix.html) myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains IDE is the built-in terminal. It looks really good, supports multiple tabs, painless copying and pasting (yeah, even with `ctrl`+`v` on Windows), loads of history, and more.\n\n![typing at 100 chars per second](/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif)\n\nOn Windows, it’s way above and beyond poor old `cmd`. Mac OS X already has a lovely terminal but I never find myself using it. It's nice to be able to quickly switch between writing code and executing commands when the terminal is right there in the IDE. Especially because I normally use IntelliJ in full-screen mode. I've even added some extra key mappings to switch to / from the terminal I'm already used to using on the Web for Chrome's DevTools; `ctrl` + `shift` + `j` on Windows and `cmd` + `alt` + `j` on Mac.\n\n#### Cygwin\n\nIf you’re on Windows, you might want to go a step further and have access to typical Linux commands like `ls`, `grep`, etc. [Cygwin](https://www.cygwin.com/) is \"a large collection of GNU and Open Source tools which provide functionality similar to a Linux distribution on Windows\". You could install it and use its `mintty.exe` terminal which gives you access to these commands. It's not a bad terminal. You could even install Cygwin in a slightly risky way which tacks support for these commands onto `cmd`. It's not self-contained though and could cause problems.\n\n#### Babun\n\n[Babun](http://babun.github.io/) gives you a pre-configured Cygwin (so the install steps are much simpler) plus a good few extras including syntax highlighting, git, auto-updates, etc. When running Babun, you’re actually just running Cygwin’s `mintty.exe`. I personally use Babun because it supports everything needed for our Vagrant setup out of the box. Going back to a separate terminal would be painful at this point though.\n\n#### Custom shells in a JetBrains IDE\n\n:::figure using-cygwins-bash-terminal-in-a-jetbrains-ide/settings.jpg The terminal settings section\n:::\n\nClick _File_ then _Settings_ and search for “terminal”. Change the _Shell path_ to `C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\bin\\bash.exe` if you're using Babun. Cygwin users should use `C:\\cygwin\\bin\\bash.exe` or similar, depending on where you've it installed. Click _Ok_, open a new terminal (tab) and try running `ls -l`. Tada!\n\n#### pwd?\n\nHold on… you might notice you’re in the wrong directory now. The terminal opened in `C:\\Users\\YOUR-USERNAME\\` instead of opening at the root of the current project like it typically would with the default shell. This would drive me mad, especially when switching projects or opening more terminal tabs. To fix this, open up `C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\etc\\bash.bashrc` for Babun, `C:\\cygwin\\etc\\bash.bashrc` (or similar) for Cygwin, and add a new line to the end; `cd $OLDPWD`. Now, you're brought to the current project's room every time you open the terminal or another terminal tab. Great!\n\n![* acts cool *](/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/spray.gif)\n\nThere isn’t that much to it but it took a bit of time and far too many tabs to figure this out. Hopefully, this post will save someone out there some time and effort in the future.\n",
  "unfilteredRenderedBody": "<h2><a id=\"using-cygwins-bash-terminal-in-a-jetbrains-ide\" class=\"post-header-anchor\" href=\"#using-cygwins-bash-terminal-in-a-jetbrains-ide\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Using Cygwin’s bash terminal in a JetBrains IDE</h2>\n<p><a href=\"https://www.jetbrains.com\" rel=\"noopener\">JetBrains</a> IDEs are the best. <a href=\"https://www.jetbrains.com/idea/\" rel=\"noopener\">IntelliJ</a>, <a href=\"https://developer.android.com/sdk/index.html\" rel=\"noopener\">Android Studio</a>, <a href=\"https://www.jetbrains.com/phpstorm/\" rel=\"noopener\">PHPStorm</a>, <a href=\"https://www.jetbrains.com/pycharm/\" rel=\"noopener\">PyCharm</a>, and so on. I use <a href=\"https://www.jetbrains.com/idea/features/editions_comparison_matrix.html\" rel=\"noopener\">IntelliJ Ultimate</a> myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains IDE is the built-in terminal. It looks really good, supports multiple tabs, painless copying and pasting (yeah, even with <code>ctrl</code>+<code>v</code> on Windows), loads of history, and more.</p>\n<p><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif\" alt=\"typing at 100 chars per second\"></p>\n<p>On Windows, it’s way above and beyond poor old <code>cmd</code>. Mac OS X already has a lovely terminal but I never find myself using it. It's nice to be able to quickly switch between writing code and executing commands when the terminal is right there in the IDE. Especially because I normally use IntelliJ in full-screen mode. I've even added some extra key mappings to switch to / from the terminal I'm already used to using on the Web for Chrome's DevTools; <code>ctrl</code> + <code>shift</code> + <code>j</code> on Windows and <code>cmd</code> + <code>alt</code> + <code>j</code> on Mac.</p>\n<h4><a id=\"cygwin\" class=\"post-header-anchor\" href=\"#cygwin\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Cygwin</h4>\n<p>If you’re on Windows, you might want to go a step further and have access to typical Linux commands like <code>ls</code>, <code>grep</code>, etc. <a href=\"https://www.cygwin.com/\" rel=\"noopener\">Cygwin</a> is &quot;a large collection of GNU and Open Source tools which provide functionality similar to a Linux distribution on Windows&quot;. You could install it and use its <code>mintty.exe</code> terminal which gives you access to these commands. It's not a bad terminal. You could even install Cygwin in a slightly risky way which tacks support for these commands onto <code>cmd</code>. It's not self-contained though and could cause problems.</p>\n<h4><a id=\"babun\" class=\"post-header-anchor\" href=\"#babun\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Babun</h4>\n<p><a href=\"http://babun.github.io/\" rel=\"noopener\">Babun</a> gives you a pre-configured Cygwin (so the install steps are much simpler) plus a good few extras including syntax highlighting, git, auto-updates, etc. When running Babun, you’re actually just running Cygwin’s <code>mintty.exe</code>. I personally use Babun because it supports everything needed for our Vagrant setup out of the box. Going back to a separate terminal would be painful at this point though.</p>\n<h4><a id=\"custom-shells-in-a-jetbrains-ide\" class=\"post-header-anchor\" href=\"#custom-shells-in-a-jetbrains-ide\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Custom shells in a JetBrains IDE</h4>\n<figure>\n          <a href=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/settings.jpg\"><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/settings.jpg\" alt=\"\"/></a>\n          <figcaption><p>The terminal settings section</p>\n</figcaption>\n        </figure><p>Click <em>File</em> then <em>Settings</em> and search for “terminal”. Change the <em>Shell path</em> to <code>C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\bin\\bash.exe</code> if you're using Babun. Cygwin users should use <code>C:\\cygwin\\bin\\bash.exe</code> or similar, depending on where you've it installed. Click <em>Ok</em>, open a new terminal (tab) and try running <code>ls -l</code>. Tada!</p>\n<h4><a id=\"pwd\" class=\"post-header-anchor\" href=\"#pwd\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>pwd?</h4>\n<p>Hold on… you might notice you’re in the wrong directory now. The terminal opened in <code>C:\\Users\\YOUR-USERNAME\\</code> instead of opening at the root of the current project like it typically would with the default shell. This would drive me mad, especially when switching projects or opening more terminal tabs. To fix this, open up <code>C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\etc\\bash.bashrc</code> for Babun, <code>C:\\cygwin\\etc\\bash.bashrc</code> (or similar) for Cygwin, and add a new line to the end; <code>cd $OLDPWD</code>. Now, you're brought to the current project's room every time you open the terminal or another terminal tab. Great!</p>\n<p><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/spray.gif\" alt=\"* acts cool *\"></p>\n<p>There isn’t that much to it but it took a bit of time and far too many tabs to figure this out. Hopefully, this post will save someone out there some time and effort in the future.</p>\n",
  "attributes": {
    "date": "2015-07-28T00:00:00.000Z",
    "summary": "JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…",
    "original": {
      "blogLink": "https://engineroom.teamwork.com",
      "blogName": "Teamwork's Engine Room",
      "url": "https://engineroom.teamwork.com/using-cygwins-bash-terminal-in-a-jetbrains-ide-d22dd71b52b4"
    },
    "tags": [
      {
        "id": "jetbrains",
        "name": "jetbrains"
      },
      {
        "id": "cygwin",
        "name": "cygwin"
      },
      {
        "id": "ide",
        "name": "ide"
      },
      {
        "id": "terminal",
        "name": "terminal"
      },
      {
        "id": "babun",
        "name": "babun"
      }
    ],
    "title": "Using Cygwin’s bash terminal in a JetBrains IDE",
    "updated_at": "2019-05-22T08:27:09.388Z",
    "photo": "/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif"
  },
  "title": "Using Cygwin’s bash terminal in a JetBrains IDE",
  "renderedSummary": "<p>JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…</p>\n",
  "rendered": "<h2><a id=\"using-cygwins-bash-terminal-in-a-jetbrains-ide\" class=\"post-header-anchor\" href=\"#using-cygwins-bash-terminal-in-a-jetbrains-ide\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Using Cygwin’s bash terminal in a JetBrains IDE</h2>\n<p><a href=\"https://www.jetbrains.com\" rel=\"noopener\">JetBrains</a> IDEs are the best. <a href=\"https://www.jetbrains.com/idea/\" rel=\"noopener\">IntelliJ</a>, <a href=\"https://developer.android.com/sdk/index.html\" rel=\"noopener\">Android Studio</a>, <a href=\"https://www.jetbrains.com/phpstorm/\" rel=\"noopener\">PHPStorm</a>, <a href=\"https://www.jetbrains.com/pycharm/\" rel=\"noopener\">PyCharm</a>, and so on. I use <a href=\"https://www.jetbrains.com/idea/features/editions_comparison_matrix.html\" rel=\"noopener\">IntelliJ Ultimate</a> myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains IDE is the built-in terminal. It looks really good, supports multiple tabs, painless copying and pasting (yeah, even with <code>ctrl</code>+<code>v</code> on Windows), loads of history, and more.</p>\n<p><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif\" alt=\"typing at 100 chars per second\"></p>\n<p>On Windows, it’s way above and beyond poor old <code>cmd</code>. Mac OS X already has a lovely terminal but I never find myself using it. It's nice to be able to quickly switch between writing code and executing commands when the terminal is right there in the IDE. Especially because I normally use IntelliJ in full-screen mode. I've even added some extra key mappings to switch to / from the terminal I'm already used to using on the Web for Chrome's DevTools; <code>ctrl</code> + <code>shift</code> + <code>j</code> on Windows and <code>cmd</code> + <code>alt</code> + <code>j</code> on Mac.</p>\n<h4><a id=\"cygwin\" class=\"post-header-anchor\" href=\"#cygwin\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Cygwin</h4>\n<p>If you’re on Windows, you might want to go a step further and have access to typical Linux commands like <code>ls</code>, <code>grep</code>, etc. <a href=\"https://www.cygwin.com/\" rel=\"noopener\">Cygwin</a> is &quot;a large collection of GNU and Open Source tools which provide functionality similar to a Linux distribution on Windows&quot;. You could install it and use its <code>mintty.exe</code> terminal which gives you access to these commands. It's not a bad terminal. You could even install Cygwin in a slightly risky way which tacks support for these commands onto <code>cmd</code>. It's not self-contained though and could cause problems.</p>\n<h4><a id=\"babun\" class=\"post-header-anchor\" href=\"#babun\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Babun</h4>\n<p><a href=\"http://babun.github.io/\" rel=\"noopener\">Babun</a> gives you a pre-configured Cygwin (so the install steps are much simpler) plus a good few extras including syntax highlighting, git, auto-updates, etc. When running Babun, you’re actually just running Cygwin’s <code>mintty.exe</code>. I personally use Babun because it supports everything needed for our Vagrant setup out of the box. Going back to a separate terminal would be painful at this point though.</p>\n<h4><a id=\"custom-shells-in-a-jetbrains-ide\" class=\"post-header-anchor\" href=\"#custom-shells-in-a-jetbrains-ide\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>Custom shells in a JetBrains IDE</h4>\n<figure>\n          <a href=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/settings.jpg\"><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/settings.jpg\" alt=\"\"/></a>\n          <figcaption><p>The terminal settings section</p>\n</figcaption>\n        </figure><p>Click <em>File</em> then <em>Settings</em> and search for “terminal”. Change the <em>Shell path</em> to <code>C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\bin\\bash.exe</code> if you're using Babun. Cygwin users should use <code>C:\\cygwin\\bin\\bash.exe</code> or similar, depending on where you've it installed. Click <em>Ok</em>, open a new terminal (tab) and try running <code>ls -l</code>. Tada!</p>\n<h4><a id=\"pwd\" class=\"post-header-anchor\" href=\"#pwd\" aria-hidden=\"true\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 8 8\"><path d=\"M5.88.03c-.18.01-.36.03-.53.09-.27.1-.53.25-.75.47a.5.5 0 1 0 .69.69c.11-.11.24-.17.38-.22.35-.12.78-.07 1.06.22.39.39.39 1.04 0 1.44l-1.5 1.5c-.44.44-.8.48-1.06.47-.26-.01-.41-.13-.41-.13a.5.5 0 1 0-.5.88s.34.22.84.25c.5.03 1.2-.16 1.81-.78l1.5-1.5c.78-.78.78-2.04 0-2.81-.28-.28-.61-.45-.97-.53-.18-.04-.38-.04-.56-.03zm-2 2.31c-.5-.02-1.19.15-1.78.75l-1.5 1.5c-.78.78-.78 2.04 0 2.81.56.56 1.36.72 2.06.47.27-.1.53-.25.75-.47a.5.5 0 1 0-.69-.69c-.11.11-.24.17-.38.22-.35.12-.78.07-1.06-.22-.39-.39-.39-1.04 0-1.44l1.5-1.5c.4-.4.75-.45 1.03-.44.28.01.47.09.47.09a.5.5 0 1 0 .44-.88s-.34-.2-.84-.22z\"></path></svg></a>pwd?</h4>\n<p>Hold on… you might notice you’re in the wrong directory now. The terminal opened in <code>C:\\Users\\YOUR-USERNAME\\</code> instead of opening at the root of the current project like it typically would with the default shell. This would drive me mad, especially when switching projects or opening more terminal tabs. To fix this, open up <code>C:\\Users\\YOUR-USERNAME\\.babun\\cygwin\\etc\\bash.bashrc</code> for Babun, <code>C:\\cygwin\\etc\\bash.bashrc</code> (or similar) for Cygwin, and add a new line to the end; <code>cd $OLDPWD</code>. Now, you're brought to the current project's room every time you open the terminal or another terminal tab. Great!</p>\n<p><img src=\"/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/spray.gif\" alt=\"* acts cool *\"></p>\n<p>There isn’t that much to it but it took a bit of time and far too many tabs to figure this out. Hopefully, this post will save someone out there some time and effort in the future.</p>\n",
  "summary": "JetBrains IDEs are the best. IntelliJ, Android Studio, PHPStorm, PyCharm, and so on. I use IntelliJ Ultimate myself, which is kind of like all of their IDEs in one. One of the things I love about any JetBrains…\n",
  "original": {
    "blogLink": "https://engineroom.teamwork.com",
    "blogName": "Teamwork's Engine Room",
    "url": "https://engineroom.teamwork.com/using-cygwins-bash-terminal-in-a-jetbrains-ide-d22dd71b52b4"
  },
  "photo": "/images/blog-content/using-cygwins-bash-terminal-in-a-jetbrains-ide/typing.gif",
  "keywords": [
    "jetbrains",
    "cygwin",
    "ide",
    "terminal",
    "babun"
  ],
  "published_at": "2015-07-28T00:00:00.000Z",
  "updated_at": "2019-05-22T08:27:09.388Z",
  "year": 2015,
  "month": 7,
  "day": 29,
  "relevanceScore": 0,
  "next": {
    "id": "under-the-hood-of-a-hybrid-app",
    "slug": "under-the-hood-of-a-hybrid-app",
    "collection": null,
    "keywords": [
      "product",
      "web",
      "javascript",
      "NW.js",
      "node-webkit",
      "desktop",
      "hybrid",
      "mobile",
      "development"
    ],
    "original": {
      "blogLink": "https://engineroom.teamwork.com",
      "blogName": "Teamwork's Engine Room",
      "url": "https://engineroom.teamwork.com/under-the-hood-of-a-hybrid-app-2215ce6e342a"
    },
    "title": "Under the hood of a hybrid (app)",
    "summary": "It has been about a year since we had A peek under the hood of Teamwork Chat. Since then, we’ve added a few nice features, fixed some bugs, and introduced a couple. You know how it goes. More...\n",
    "photo": "/images/blog-content/under-the-hood-of-a-hybrid-app/nav.png",
    "published_at": "2016-04-16T00:00:00.000Z",
    "renderedSummary": "<p>It has been about a year since we had A peek under the hood of Teamwork Chat. Since then, we’ve added a few nice features, fixed some bugs, and introduced a couple. You know how it goes. More...</p>\n"
  },
  "prev": {
    "id": "nwjs-app-and-shortcut-apis",
    "slug": "nwjs-app-and-shortcut-apis",
    "collection": null,
    "keywords": [
      "node-webkit",
      "desktop",
      "javascript",
      "app",
      "shortcut",
      "development"
    ],
    "original": {
      "blogLink": "https://www.packtpub.com/books/content/blogs",
      "blogName": "Packt books",
      "url": "https://www.packtpub.com/books/content/nwjs-app-and-shortcut-apis"
    },
    "title": "NW.js: The App and Shortcut APIs",
    "summary": "The NW.js GUI library provides an &quot;App&quot; API, which contains a variety of methods and properties, some of which are essential to pretty much any app, and some have more obscure use cases. You can access the API as follows...\n",
    "published_at": "2015-12-18T00:00:00.000Z",
    "renderedSummary": "<p>The NW.js GUI library provides an &quot;App&quot; API, which contains a variety of methods and properties, some of which are essential to pretty much any app, and some have more obscure use cases. You can access the API as follows...</p>\n"
  },
  "moreArticles": [
    {
      "id": "flexible-data-tables-with-css-grid",
      "slug": "flexible-data-tables-with-css-grid",
      "collection": null,
      "keywords": [
        "css grid",
        "css",
        "javascript",
        "table",
        "data",
        "responsive design",
        "responsive",
        "flexbox",
        "resize column",
        "web app",
        "development",
        "crm",
        "sales"
      ],
      "title": "Flexible data tables with CSS Grid",
      "summary": "Now that we've launched, I can finally talk about the secret project I've been working on for the last two years. One interesting piece of the Teamwork CRM puzzle was the &quot;list view&quot;.\nIt's a powerful page component which exists seven times in the app — a table on steroids essentially. I could talk about it for days but I won't bore you. I'll focus on how we added a lot of flexibility with a few lines of CSS (Grid). Namely, how we lay out data-heavy tables, how we support resizing of columns, and more.\n",
      "photo": "/images/blog-content/flexible-data-tables-with-css-grid/wide3.png",
      "published_at": "2019-05-12T00:00:00.000Z",
      "renderedSummary": "<p>Now that we've launched, I can finally talk about the secret project I've been working on for the last two years. One interesting piece of the <a href=\"https://www.teamwork.com/crm\" rel=\"noopener\">Teamwork CRM</a> puzzle was the &quot;list view&quot;.</p>\n<p>It's a powerful page component which exists seven times in the app — a table on steroids essentially. I could talk about it for days but I won't bore you. I'll focus on how we added a lot of flexibility with a few lines of CSS (Grid). Namely, how we lay out data-heavy tables, how we support resizing of columns, and more.</p>\n"
    },
    {
      "id": "random-open-api",
      "slug": "random-open-api",
      "collection": null,
      "keywords": [
        "api",
        "open API",
        "public API",
        "twitter",
        "bot",
        "zeit",
        "now",
        "serverless",
        "faas",
        "node.js",
        "cron",
        "development"
      ],
      "title": "How I made the @randomOpenAPI Twitter bot in 42 minutes-ish",
      "summary": "I love APIs. Especially open APIs. I wish there were way more of them. There's a lot of data out there we can't get our hands on. Imagine all of the unborn apps, studies, and infographics.\nThe natural conclusion was to create a Twitter bot. Have you ever seen Stefan Judis' @randomMDN? It tweets a random article from MDN multiple times a day. I decided to create one of my own to raise awareness about open APIs. Plus it's an excuse for a small fun project.\n",
      "photo": "/images/blog-content/random-open-api/tweet.png",
      "published_at": "2019-02-02T00:00:00.000Z",
      "renderedSummary": "<p>I love APIs. Especially open APIs. I wish there were way more of them. There's a lot of data out there we can't get our hands on. Imagine all of the unborn apps, studies, and infographics.</p>\n<p>The natural conclusion was to create a Twitter bot. Have you ever seen Stefan Judis' <a href=\"https://twitter.com/randommdn\" rel=\"noopener\">@randomMDN</a>? It tweets a random article from <a href=\"https://developer.mozilla.org/en-US/\" rel=\"noopener\">MDN</a> multiple times a day. I decided to create one of my own to raise awareness about open APIs. Plus it's an excuse for a small fun project.</p>\n"
    },
    {
      "id": "lessons-learned-leading-teams",
      "slug": "lessons-learned-leading-teams",
      "collection": null,
      "keywords": [
        "leadership",
        "management",
        "teams",
        "development",
        "lead",
        "leading",
        "managing",
        "manager",
        "programming",
        "delegating",
        "efficiency",
        "communication",
        "people",
        "technical",
        "transition",
        "job",
        "career",
        "growth",
        "product management",
        "project management",
        "product lead",
        "technical lead",
        "lead developer"
      ],
      "title": "Lessons learned leading teams",
      "summary": "I've been thinking about team leading a lot lately. When revisiting advice a friend asked for when transitioning to a team lead position, I decided to flesh it out and put it online. Most of the following will hopefully be helpful to anyone leading a team or any manager, although some will be more relevant to leaders of developers and developers transitioning into leadership roles. If it helps anyone, great. It will be a good reference for me at least. Alright, let's get to it.\n",
      "photo": "/images/blog-content/lessons-learned-leading-teams/graph.png",
      "published_at": "2018-11-14T00:00:00.000Z",
      "renderedSummary": "<p>I've been thinking about team leading a lot lately. When revisiting advice a friend asked for when transitioning to a team lead position, I decided to flesh it out and put it online. Most of the following will hopefully be helpful to anyone leading a team or any manager, although some will be more relevant to leaders of developers and developers transitioning into leadership roles. If it helps anyone, great. It will be a good reference for me at least. Alright, let's get to it.</p>\n"
    }
  ]
}