{
  "id": "table",
  "name": "table",
  "articles": [
    {
      "id": "flexible-data-tables-with-css-grid",
      "slug": "flexible-data-tables-with-css-grid",
      "collection": null,
      "keywords": [
        "css grid",
        "css",
        "javascript",
        "table",
        "data",
        "responsive design",
        "responsive",
        "flexbox",
        "resize column",
        "web app",
        "development",
        "crm",
        "sales"
      ],
      "title": "Flexible data tables with CSS Grid",
      "summary": "Now that we've launched, I can finally talk about the secret project I've been working on for the last two years. One interesting piece of the Teamwork CRM puzzle was the &quot;list view&quot;.\nIt's a powerful page component which exists seven times in the app — a table on steroids essentially. I could talk about it for days but I won't bore you. I'll focus on how we added a lot of flexibility with a few lines of CSS (Grid). Namely, how we lay out data-heavy tables, how we support resizing of columns, and more.\n",
      "photo": "/images/blog-content/flexible-data-tables-with-css-grid/wide3.png",
      "published_at": "2019-05-12T00:00:00.000Z",
      "renderedSummary": "<p>Now that we've launched, I can finally talk about the secret project I've been working on for the last two years. One interesting piece of the <a href=\"https://www.teamwork.com/crm\" rel=\"noopener\">Teamwork CRM</a> puzzle was the &quot;list view&quot;.</p>\n<p>It's a powerful page component which exists seven times in the app — a table on steroids essentially. I could talk about it for days but I won't bore you. I'll focus on how we added a lot of flexibility with a few lines of CSS (Grid). Namely, how we lay out data-heavy tables, how we support resizing of columns, and more.</p>\n"
    }
  ]
}